
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module soc(

	//////////// CLOCK //////////
	input 		          		FPGA_CLK1_50,
	input 		          		FPGA_CLK2_50,
	input 		          		FPGA_CLK3_50,

	//////////// HPS //////////
	output		    [14:0]		HPS_DDR3_ADDR,
	output		     [2:0]		HPS_DDR3_BA,
	output		          		HPS_DDR3_CAS_N,
	output		          		HPS_DDR3_CKE,
	output		          		HPS_DDR3_CK_N,
	output		          		HPS_DDR3_CK_P,
	output		          		HPS_DDR3_CS_N,
	output		     [3:0]		HPS_DDR3_DM,
	inout 		    [31:0]		HPS_DDR3_DQ,
	inout 		     [3:0]		HPS_DDR3_DQS_N,
	inout 		     [3:0]		HPS_DDR3_DQS_P,
	output		          		HPS_DDR3_ODT,
	output		          		HPS_DDR3_RAS_N,
	output		          		HPS_DDR3_RESET_N,
	input 		          		HPS_DDR3_RZQ,
	output		          		HPS_DDR3_WE_N,

	//////////// GPIO_0, GPIO connect to GPIO Default //////////
	inout 		    [35:0]		GPIO
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
	wire hps_fpga_reset_n;
	wire [7:0] pwm0_value;
	wire [7:0] pwm1_value;
	wire [7:0] pwm2_value;
	wire [7:0] pwm3_value;



//=======================================================
//  Structural coding
//=======================================================

	system u0 (
		// Clock and Reset
		.clk_clk                         (FPGA_CLK1_50),                         //                     clk.clk
		.reset_reset_n							(hps_fpga_reset_n),
		// DDR3
		.memory_mem_a                    (HPS_DDR3_ADDR),                    //                  memory.mem_a
      .memory_mem_ba                   (HPS_DDR3_BA),                   //                        .mem_ba
      .memory_mem_ck                   (HPS_DDR3_CK_P),                   //                        .mem_ck
      .memory_mem_ck_n                 (HPS_DDR3_CK_N),                 //                        .mem_ck_n
      .memory_mem_cke                  (HPS_DDR3_CKE),                  //                        .mem_cke
      .memory_mem_cs_n                 (HPS_DDR3_CS_N),                 //                        .mem_cs_n
      .memory_mem_ras_n                (HPS_DDR3_RAS_N),                //                        .mem_ras_n
      .memory_mem_cas_n                (HPS_DDR3_CAS_N),                //                        .mem_cas_n
      .memory_mem_we_n                 (HPS_DDR3_WE_N),                 //                        .mem_we_n
      .memory_mem_reset_n              (HPS_DDR3_RESET_N),              //                        .mem_reset_n
      .memory_mem_dq                   (HPS_DDR3_DQ),                   //                        .mem_dq
      .memory_mem_dqs                  (HPS_DDR3_DQS_P),                  //                        .mem_dqs
      .memory_mem_dqs_n                (HPS_DDR3_DQS_N),                //                        .mem_dqs_n
      .memory_mem_odt                  (HPS_DDR3_ODT),                  //                        .mem_odt
      .memory_mem_dm                   (HPS_DDR3_DM),                   //                        .mem_dm
      .memory_oct_rzqin                (HPS_DDR3_RZQ),                 //                        .oct_rzqin
		
		.hps_0_h2f_reset_reset_n         (hps_fpga_reset_n),
		
		// PWM
		.pwm_input_0_export					(pwm0_value),
		.pwm_input_1_export					(pwm1_value),
		.pwm_input_2_export					(pwm2_value),
		.pwm_input_3_export					(pwm3_value)
    );
	 
	 pwm_module pwm0 (
		.clk (FPGA_CLK1_50),
		.reset_n (hps_fpga_reset_n),
		.value (pwm0_value),
		.pulse (GPIO[0])
	);
	
	pwm_module pwm1 (
		.clk (FPGA_CLK1_50),
		.reset_n (hps_fpga_reset_n),
		.value (pwm1_value),
		.pulse (GPIO[2])
	);
	
	pwm_module pwm2 (
		.clk (FPGA_CLK1_50),
		.reset_n (hps_fpga_reset_n),
		.value (pwm2_value),
		.pulse (GPIO[4])
	);
	
	pwm_module pwm3 (
		.clk (FPGA_CLK1_50),
		.reset_n (hps_fpga_reset_n),
		.value (pwm3_value),
		.pulse (GPIO[6])
	);


endmodule
